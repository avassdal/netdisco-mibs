.1.3,SNMPv2-SMI::org,,,,,,
.1.3.6,SNMPv2-SMI::dod,,,,,,
.1.3.6.1,SNMPv2-SMI::internet,,,,,,
.1.3.6.1.1,SNMPv2-SMI::directory,,,,,,
.1.3.6.1.2,SNMPv2-SMI::mgmt,,,,,,
.1.3.6.1.2.1,SNMPv2-SMI::mib-2,,,,,,
.1.3.6.1.2.1.1,RFC1213-MIB::system,,,,,,
.1.3.6.1.2.1.1.1,RFC1213-MIB::sysDescr,OCTET,read-only,,mandatory,,A textual description of the entity. This value should include the full name and version identification of the system's hardware type, software operating-system, and networking software. It is mandatory that this only contain printable ASCII characters.
.1.3.6.1.2.1.1.2,RFC1213-MIB::sysObjectID,OBJECT,read-only,,mandatory,,The vendor's authoritative identification of the network management subsystem contained in the entity. This value is allocated within the SMI enterprises subtree (1.3.6.1.4.1) and provides an easy and unambiguous means for determining `what kind of box' is being managed. For example, if vendor `Flintstones, Inc.' was assigned the subtree 1.3.6.1.4.1.4242, it could assign the identifier 1.3.6.1.4.1.4242.1.1 to its `Fred Router'.
.1.3.6.1.2.1.1.3,RFC1213-MIB::sysUpTime,TimeTicks,read-only,,mandatory,,The time (in hundredths of a second) since the network management portion of the system was last re-initialized.
.1.3.6.1.2.1.1.4,RFC1213-MIB::sysContact,OCTET,read-write,,mandatory,,The textual identification of the contact person for this managed node, together with information on how to contact this person.
.1.3.6.1.2.1.1.5,RFC1213-MIB::sysName,OCTET,read-write,,mandatory,,An administratively-assigned name for this managed node. By convention, this is the node's fully-qualified domain name.
.1.3.6.1.2.1.1.6,RFC1213-MIB::sysLocation,OCTET,read-write,,mandatory,,The physical location of this node (e.g., `telephone closet, 3rd floor').
.1.3.6.1.2.1.1.7,RFC1213-MIB::sysServices,INTEGER,read-only,,mandatory,,A value which indicates the set of services that this entity primarily offers. The value is a sum. This sum initially takes the value zero, Then, for each layer, L, in the range 1 through 7, that this node performs transactions for, 2 raised to (L - 1) is added to the sum. For example, a node which performs primarily routing functions would have a value of 4 (2^(3-1)). In contrast, a node which is a host offering application services would have a value of 72 (2^(4-1) + 2^(7-1)). Note that in the context of the Internet suite of protocols, values should be calculated accordingly: layer functionality 1 physical (e.g., repeaters) 2 datalink/subnetwork (e.g., bridges) 3 internet (e.g., IP gateways) 4 end-to-end (e.g., IP hosts) 7 applications (e.g., mail relays) For systems including OSI protocols, layers 5 and 6 may also be counted.
.1.3.6.1.2.1.2,RFC1213-MIB::interfaces,,,,,,
.1.3.6.1.2.1.2.1,RFC1213-MIB::ifNumber,INTEGER,read-only,,mandatory,,The number of network interfaces (regardless of their current state) present on this system.
.1.3.6.1.2.1.2.2,RFC1213-MIB::ifTable,,not-accessible,,mandatory,,A list of interface entries. The number of entries is given by the value of ifNumber.
.1.3.6.1.2.1.2.2.1,RFC1213-MIB::ifEntry,,not-accessible,ifIndex,mandatory,,An interface entry containing objects at the subnetwork layer and below for a particular interface.
.1.3.6.1.2.1.2.2.1.1,RFC1213-MIB::ifIndex,INTEGER,read-only,,mandatory,,A unique value for each interface. Its value ranges between 1 and the value of ifNumber. The value for each interface must remain constant at least from one re-initialization of the entity's network management system to the next re- initialization.
.1.3.6.1.2.1.2.2.1.2,RFC1213-MIB::ifDescr,OCTET,read-only,,mandatory,,A textual string containing information about the interface. This string should include the name of the manufacturer, the product name and the version of the hardware interface.
.1.3.6.1.2.1.2.2.1.3,RFC1213-MIB::ifType,INTEGER,read-only,,mandatory,other(1):regular1822(2):hdh1822(3):ddnX25(4):rfc877x25(5):ethernetCsmacd(6):iso88023Csmacd(7):iso88024TokenBus(8):iso88025TokenRing(9):iso88026Man(10):starLan(11):proteon10Mbit(12):proteon80Mbit(13):hyperchannel(14):fddi(15):lapb(16):sdlc(17):ds1(18):e1(19):basicISDN(20):primaryISDN(21):propPointToPointSerial(22):ppp(23):softwareLoopback(24):eon(25):ethernet3Mbit(26):nsip(27):slip(28):ultra(29):ds3(30):sip(31):frameRelay(32):rs232(33):para(34):arcnet(35):arcnetPlus(36):atm(37):miox25(38):sonet(39):x25ple(40):iso88022llc(41):localTalk(42):smdsDxi(43):frameRelayService(44):v35(45):hssi(46):hippi(47):modem(48):aal5(49):sonetPath(50):sonetVT(51):smdsIcip(52):propVirtual(53):propMultiplexor(54):ieee80212(55):fibreChannel(56):hippiInterface(57):frameRelayInterconnect(58):aflane8023(59):aflane8025(60):cctEmul(61):fastEther(62):isdn(63):v11(64):v36(65):g703at64k(66):g703at2mb(67):qllc(68):fastEtherFX(69):channel(70):ieee80211(71):ibm370parChan(72):escon(73):dlsw(74):isdns(75):isdnu(76):lapd(77):ipSwitch(78):rsrb(79):atmLogical(80):ds0(81):ds0Bundle(82):bsc(83):async(84):cnr(85):iso88025Dtr(86):eplrs(87):arap(88):propCnls(89):hostPad(90):termPad(91):frameRelayMPI(92):x213(93):adsl(94):radsl(95):sdsl(96):vdsl(97):iso88025CRFPInt(98):myrinet(99):voiceEM(100):voiceFXO(101):voiceFXS(102):voiceEncap(103):voiceOverIp(104):atmDxi(105):atmFuni(106):atmIma(107):pppMultilinkBundle(108):ipOverCdlc(109):ipOverClaw(110):stackToStack(111):virtualIpAddress(112):mpc(113):ipOverAtm(114):iso88025Fiber(115):tdlc(116):gigabitEthernet(117):hdlc(118):lapf(119):v37(120):x25mlp(121):x25huntGroup(122):transpHdlc(123):interleave(124):fast(125):ip(126):docsCableMaclayer(127):docsCableDownstream(128):docsCableUpstream(129):a12MppSwitch(130):tunnel(131):coffee(132):ces(133):atmSubInterface(134):l2vlan(135):l3ipvlan(136):l3ipxvlan(137):digitalPowerline(138):mediaMailOverIp(139):dtm(140):dcn(141):ipForward(142):msdsl(143):ieee1394(144):if-gsn(145):dvbRccMacLayer(146):dvbRccDownstream(147):dvbRccUpstream(148):atmVirtual(149):mplsTunnel(150):srp(151):voiceOverAtm(152):voiceOverFrameRelay(153):idsl(154):compositeLink(155):ss7SigLink(156):propWirelessP2P(157):frForward(158):rfc1483(159):usb(160):ieee8023adLag(161):bgppolicyaccounting(162):frf16MfrBundle(163):h323Gatekeeper(164):h323Proxy(165):mpls(166):mfSigLink(167):hdsl2(168):shdsl(169):ds1FDL(170):pos(171):dvbAsiIn(172):dvbAsiOut(173):plc(174):nfas(175):tr008(176):gr303RDT(177):gr303IDT(178):isup(179):propDocsWirelessMaclayer(180):propDocsWirelessDownstream(181):propDocsWirelessUpstream(182):hiperlan2(183):propBWAp2Mp(184):sonetOverheadChannel(185):digitalWrapperOverheadChannel(186):aal2(187):radioMAC(188):atmRadio(189):imt(190):mvl(191):reachDSL(192):frDlciEndPt(193):atmVciEndPt(194):opticalChannel(195):opticalTransport(196):propAtm(197):voiceOverCable(198):infiniband(199):teLink(200):q2931(201):virtualTg(202):sipTg(203):sipSig(204):docsCableUpstreamChannel(205):econet(206):pon155(207):pon622(208):bridge(209):linegroup(210):voiceEMFGD(211):voiceFGDEANA(212):voiceDID(213):mpegTransport(214):sixToFour(215):gtp(216):pdnEtherLoop1(217):pdnEtherLoop2(218):opticalChannelGroup(219):homepna(220):gfp(221):ciscoISLvlan(222):actelisMetaLOOP(223):fcipLink(224):rpr(225):qam(226):lmp(227):cblVectaStar(228):docsCableMCmtsDownstream(229):adsl2(230):macSecControlledIF(231):macSecUncontrolledIF(232):aviciOpticalEther(233):atmbond(234):voiceFGDOS(235):mocaVersion1(236):ieee80216WMAN(237):adsl2plus(238):dvbRcsMacLayer(239):dvbTdm(240):dvbRcsTdma(241):x86Laps(242):wwanPP(243):wwanPP2(244):voiceEBS(245):ifPwType(246):ilan(247):pip(248):aluELP(249):gpon(250):vdsl2(251):capwapDot11Profile(252):capwapDot11Bss(253):capwapWtpVirtualRadio(254):bits(255):docsCableUpstreamRfPort(256):cableDownstreamRfPort(257):vmwareVirtualNic(258):ieee802154(259):otnOdu(260):otnOtu(261):ifVfiType(262):g9981(263):g9982(264):g9983(265):aluEpon(266):aluEponOnu(267):aluEponPhysicalUni(268):aluEponLogicalLink(269):aluGponOnu(270):aluGponPhysicalUni(271):vmwareNicTeam(272):docsOfdmDownstream(277):docsOfdmaUpstream(278):gfast(279):sdci(280):xboxWireless(281):fastdsl(282):docsCableScte55d1FwdOob(283):docsCableScte55d1RetOob(284):docsCableScte55d2DsOob(285):docsCableScte55d2UsOob(286):docsCableNdf(287):docsCableNdr(288):ptm(289):ghn(290):otnOtsi(291):otnOtuc(292):otnOduc(293):otnOtsig(294):microwaveCarrierTermination(295):microwaveRadioLinkTerminal(296),The type of interface, distinguished according to the physical/link protocol(s) immediately `below' the network layer in the protocol stack.
.1.3.6.1.2.1.2.2.1.4,RFC1213-MIB::ifMtu,INTEGER,read-only,,mandatory,,The size of the largest datagram which can be sent/received on the interface, specified in octets. For interfaces that are used for transmitting network datagrams, this is the size of the largest network datagram that can be sent on the interface.
.1.3.6.1.2.1.2.2.1.5,RFC1213-MIB::ifSpeed,Gauge32,read-only,,mandatory,,An estimate of the interface's current bandwidth in bits per second. For interfaces which do not vary in bandwidth or for those where no accurate estimation can be made, this object should contain the nominal bandwidth.
.1.3.6.1.2.1.2.2.1.6,RFC1213-MIB::ifPhysAddress,OCTET,read-only,,mandatory,,The interface's address at the protocol layer immediately `below' the network layer in the protocol stack. For interfaces which do not have such an address (e.g., a serial line), this object should contain an octet string of zero length.
.1.3.6.1.2.1.2.2.1.7,RFC1213-MIB::ifAdminStatus,INTEGER,read-write,,mandatory,up(1):down(2):testing(3),The desired state of the interface. The testing(3) state indicates that no operational packets can be passed.
.1.3.6.1.2.1.2.2.1.8,RFC1213-MIB::ifOperStatus,INTEGER,read-only,,mandatory,up(1):down(2):testing(3),The current operational state of the interface. The testing(3) state indicates that no operational packets can be passed.
.1.3.6.1.2.1.2.2.1.9,RFC1213-MIB::ifLastChange,TimeTicks,read-only,,mandatory,,The value of sysUpTime at the time the interface entered its current operational state. If the current state was entered prior to the last re- initialization of the local network management subsystem, then this object contains a zero value.
.1.3.6.1.2.1.2.2.1.10,RFC1213-MIB::ifInOctets,Counter32,read-only,,mandatory,,The total number of octets received on the interface, including framing characters.
.1.3.6.1.2.1.2.2.1.11,RFC1213-MIB::ifInUcastPkts,Counter32,read-only,,mandatory,,The number of subnetwork-unicast packets delivered to a higher-layer protocol.
.1.3.6.1.2.1.2.2.1.12,RFC1213-MIB::ifInNUcastPkts,Counter32,read-only,,mandatory,,The number of non-unicast (i.e., subnetwork- broadcast or subnetwork-multicast) packets delivered to a higher-layer protocol.
.1.3.6.1.2.1.2.2.1.13,RFC1213-MIB::ifInDiscards,Counter32,read-only,,mandatory,,The number of inbound packets which were chosen to be discarded even though no errors had been detected to prevent their being deliverable to a higher-layer protocol. One possible reason for discarding such a packet could be to free up buffer space.
.1.3.6.1.2.1.2.2.1.14,RFC1213-MIB::ifInErrors,Counter32,read-only,,mandatory,,The number of inbound packets that contained errors preventing them from being deliverable to a higher-layer protocol.
.1.3.6.1.2.1.2.2.1.15,RFC1213-MIB::ifInUnknownProtos,Counter32,read-only,,mandatory,,The number of packets received via the interface which were discarded because of an unknown or unsupported protocol.
.1.3.6.1.2.1.2.2.1.16,RFC1213-MIB::ifOutOctets,Counter32,read-only,,mandatory,,The total number of octets transmitted out of the interface, including framing characters.
.1.3.6.1.2.1.2.2.1.17,RFC1213-MIB::ifOutUcastPkts,Counter32,read-only,,mandatory,,The total number of packets that higher-level protocols requested be transmitted to a subnetwork-unicast address, including those that were discarded or not sent.
.1.3.6.1.2.1.2.2.1.18,RFC1213-MIB::ifOutNUcastPkts,Counter32,read-only,,mandatory,,The total number of packets that higher-level protocols requested be transmitted to a non- unicast (i.e., a subnetwork-broadcast or subnetwork-multicast) address, including those that were discarded or not sent.
.1.3.6.1.2.1.2.2.1.19,RFC1213-MIB::ifOutDiscards,Counter32,read-only,,mandatory,,The number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
.1.3.6.1.2.1.2.2.1.20,RFC1213-MIB::ifOutErrors,Counter32,read-only,,mandatory,,The number of outbound packets that could not be transmitted because of errors.
.1.3.6.1.2.1.2.2.1.21,RFC1213-MIB::ifOutQLen,Gauge32,read-only,,mandatory,,The length of the output packet queue (in packets).
.1.3.6.1.2.1.2.2.1.22,RFC1213-MIB::ifSpecific,OBJECT,read-only,,mandatory,,A reference to MIB definitions specific to the particular media being used to realize the interface. For example, if the interface is realized by an ethernet, then the value of this object refers to a document defining objects specific to ethernet. If this information is not present, its value should be set to the OBJECT IDENTIFIER { 0 0 }, which is a syntatically valid object identifier, and any conformant implementation of ASN.1 and BER must be able to generate and recognize this value.
.1.3.6.1.2.1.3,RFC1213-MIB::at,,,,,,
.1.3.6.1.2.1.3.1,RFC1213-MIB::atTable,,not-accessible,,deprecated,,The Address Translation tables contain the NetworkAddress to `physical' address equivalences. Some interfaces do not use translation tables for determining address equivalences (e.g., DDN-X.25 has an algorithmic method); if all interfaces are of this type, then the Address Translation table is empty, i.e., has zero entries.
.1.3.6.1.2.1.3.1.1,RFC1213-MIB::atEntry,,not-accessible,atIfIndex:atNetAddress,deprecated,,Each entry contains one NetworkAddress to `physical' address equivalence.
.1.3.6.1.2.1.3.1.1.1,RFC1213-MIB::atIfIndex,INTEGER,read-write,,deprecated,,The interface on which this entry's equivalence is effective. The interface identified by a particular value of this index is the same interface as identified by the same value of ifIndex.
.1.3.6.1.2.1.3.1.1.2,RFC1213-MIB::atPhysAddress,OCTET,read-write,,deprecated,,The media-dependent `physical' address. Setting this object to a null string (one of zero length) has the effect of invaliding the corresponding entry in the atTable object. That is, it effectively dissasociates the interface identified with said entry from the mapping identified with said entry. It is an implementation-specific matter as to whether the agent removes an invalidated entry from the table. Accordingly, management stations must be prepared to receive tabular information from agents that corresponds to entries not currently in use. Proper interpretation of such entries requires examination of the relevant atPhysAddress object.
.1.3.6.1.2.1.3.1.1.3,RFC1213-MIB::atNetAddress,NetworkAddress,read-write,,deprecated,,The NetworkAddress (e.g., the IP address) corresponding to the media-dependent `physical' address.
.1.3.6.1.2.1.4,RFC1213-MIB::ip,,,,,,
.1.3.6.1.2.1.4.1,RFC1213-MIB::ipForwarding,INTEGER,read-write,,mandatory,forwarding(1):not-forwarding(2),The indication of whether this entity is acting as an IP gateway in respect to the forwarding of datagrams received by, but not addressed to, this entity. IP gateways forward datagrams. IP hosts do not (except those source-routed via the host). Note that for some managed nodes, this object may take on only a subset of the values possible. Accordingly, it is appropriate for an agent to return a `badValue' response if a management station attempts to change this object to an inappropriate value.
.1.3.6.1.2.1.4.2,RFC1213-MIB::ipDefaultTTL,INTEGER,read-write,,mandatory,,The default value inserted into the Time-To-Live field of the IP header of datagrams originated at this entity, whenever a TTL value is not supplied by the transport layer protocol.
.1.3.6.1.2.1.4.3,RFC1213-MIB::ipInReceives,Counter32,read-only,,mandatory,,The total number of input datagrams received from interfaces, including those received in error.
.1.3.6.1.2.1.4.4,RFC1213-MIB::ipInHdrErrors,Counter32,read-only,,mandatory,,The number of input datagrams discarded due to errors in their IP headers, including bad checksums, version number mismatch, other format errors, time-to-live exceeded, errors discovered in processing their IP options, etc.
.1.3.6.1.2.1.4.5,RFC1213-MIB::ipInAddrErrors,Counter32,read-only,,mandatory,,The number of input datagrams discarded because the IP address in their IP header's destination field was not a valid address to be received at this entity. This count includes invalid addresses (e.g., 0.0.0.0) and addresses of unsupported Classes (e.g., Class E). For entities which are not IP Gateways and therefore do not forward datagrams, this counter includes datagrams discarded because the destination address was not a local address.
.1.3.6.1.2.1.4.6,RFC1213-MIB::ipForwDatagrams,Counter32,read-only,,mandatory,,The number of input datagrams for which this entity was not their final IP destination, as a result of which an attempt was made to find a route to forward them to that final destination. In entities which do not act as IP Gateways, this counter will include only those packets which were Source-Routed via this entity, and the Source- Route option processing was successful.
.1.3.6.1.2.1.4.7,RFC1213-MIB::ipInUnknownProtos,Counter32,read-only,,mandatory,,The number of locally-addressed datagrams received successfully but discarded because of an unknown or unsupported protocol.
.1.3.6.1.2.1.4.8,RFC1213-MIB::ipInDiscards,Counter32,read-only,,mandatory,,The number of input IP datagrams for which no problems were encountered to prevent their continued processing, but which were discarded (e.g., for lack of buffer space). Note that this counter does not include any datagrams discarded while awaiting re-assembly.
.1.3.6.1.2.1.4.9,RFC1213-MIB::ipInDelivers,Counter32,read-only,,mandatory,,The total number of input datagrams successfully delivered to IP user-protocols (including ICMP).
.1.3.6.1.2.1.4.10,RFC1213-MIB::ipOutRequests,Counter32,read-only,,mandatory,,The total number of IP datagrams which local IP user-protocols (including ICMP) supplied to IP in requests for transmission. Note that this counter does not include any datagrams counted in ipForwDatagrams.
.1.3.6.1.2.1.4.11,RFC1213-MIB::ipOutDiscards,Counter32,read-only,,mandatory,,The number of output IP datagrams for which no problem was encountered to prevent their transmission to their destination, but which were discarded (e.g., for lack of buffer space). Note that this counter would include datagrams counted in ipForwDatagrams if any such packets met this (discretionary) discard criterion.
.1.3.6.1.2.1.4.12,RFC1213-MIB::ipOutNoRoutes,Counter32,read-only,,mandatory,,The number of IP datagrams discarded because no route could be found to transmit them to their destination. Note that this counter includes any packets counted in ipForwDatagrams which meet this `no-route' criterion. Note that this includes any datagarms which a host cannot route because all of its default gateways are down.
.1.3.6.1.2.1.4.13,RFC1213-MIB::ipReasmTimeout,INTEGER,read-only,,mandatory,,The maximum number of seconds which received fragments are held while they are awaiting reassembly at this entity.
.1.3.6.1.2.1.4.14,RFC1213-MIB::ipReasmReqds,Counter32,read-only,,mandatory,,The number of IP fragments received which needed to be reassembled at this entity.
.1.3.6.1.2.1.4.15,RFC1213-MIB::ipReasmOKs,Counter32,read-only,,mandatory,,The number of IP datagrams successfully re- assembled.
.1.3.6.1.2.1.4.16,RFC1213-MIB::ipReasmFails,Counter32,read-only,,mandatory,,The number of failures detected by the IP re- assembly algorithm (for whatever reason: timed out, errors, etc). Note that this is not necessarily a count of discarded IP fragments since some algorithms (notably the algorithm in RFC 815) can lose track of the number of fragments by combining them as they are received.
.1.3.6.1.2.1.4.17,RFC1213-MIB::ipFragOKs,Counter32,read-only,,mandatory,,The number of IP datagrams that have been successfully fragmented at this entity.
.1.3.6.1.2.1.4.18,RFC1213-MIB::ipFragFails,Counter32,read-only,,mandatory,,The number of IP datagrams that have been discarded because they needed to be fragmented at this entity but could not be, e.g., because their Don't Fragment flag was set.
.1.3.6.1.2.1.4.19,RFC1213-MIB::ipFragCreates,Counter32,read-only,,mandatory,,The number of IP datagram fragments that have been generated as a result of fragmentation at this entity.
.1.3.6.1.2.1.4.20,RFC1213-MIB::ipAddrTable,,not-accessible,,mandatory,,The table of addressing information relevant to this entity's IP addresses.
.1.3.6.1.2.1.4.20.1,RFC1213-MIB::ipAddrEntry,,not-accessible,ipAdEntAddr,mandatory,,The addressing information for one of this entity's IP addresses.
.1.3.6.1.2.1.4.20.1.1,RFC1213-MIB::ipAdEntAddr,IpAddress,read-only,,mandatory,,The IP address to which this entry's addressing information pertains.
.1.3.6.1.2.1.4.20.1.2,RFC1213-MIB::ipAdEntIfIndex,INTEGER,read-only,,mandatory,,The index value which uniquely identifies the interface to which this entry is applicable. The interface identified by a particular value of this index is the same interface as identified by the same value of ifIndex.
.1.3.6.1.2.1.4.20.1.3,RFC1213-MIB::ipAdEntNetMask,IpAddress,read-only,,mandatory,,The subnet mask associated with the IP address of this entry. The value of the mask is an IP address with all the network bits set to 1 and all the hosts bits set to 0.
.1.3.6.1.2.1.4.20.1.4,RFC1213-MIB::ipAdEntBcastAddr,INTEGER,read-only,,mandatory,,The value of the least-significant bit in the IP broadcast address used for sending datagrams on the (logical) interface associated with the IP address of this entry. For example, when the Internet standard all-ones broadcast address is used, the value will be 1. This value applies to both the subnet and network broadcasts addresses used by the entity on this (logical) interface.
.1.3.6.1.2.1.4.20.1.5,RFC1213-MIB::ipAdEntReasmMaxSize,INTEGER,read-only,,mandatory,,The size of the largest IP datagram which this entity can re-assemble from incoming IP fragmented datagrams received on this interface.
.1.3.6.1.2.1.4.21,RFC1213-MIB::ipRouteTable,,not-accessible,,mandatory,,This entity's IP Routing table.
.1.3.6.1.2.1.4.21.1,RFC1213-MIB::ipRouteEntry,,not-accessible,ipRouteDest,mandatory,,A route to a particular destination.
.1.3.6.1.2.1.4.21.1.1,RFC1213-MIB::ipRouteDest,IpAddress,read-write,,mandatory,,The destination IP address of this route. An entry with a value of 0.0.0.0 is considered a default route. Multiple routes to a single destination can appear in the table, but access to such multiple entries is dependent on the table- access mechanisms defined by the network management protocol in use.
.1.3.6.1.2.1.4.21.1.2,RFC1213-MIB::ipRouteIfIndex,INTEGER,read-write,,mandatory,,The index value which uniquely identifies the local interface through which the next hop of this route should be reached. The interface identified by a particular value of this index is the same interface as identified by the same value of ifIndex.
.1.3.6.1.2.1.4.21.1.3,RFC1213-MIB::ipRouteMetric1,INTEGER,read-write,,mandatory,,The primary routing metric for this route. The semantics of this metric are determined by the routing-protocol specified in the route's ipRouteProto value. If this metric is not used, its value should be set to -1.
.1.3.6.1.2.1.4.21.1.4,RFC1213-MIB::ipRouteMetric2,INTEGER,read-write,,mandatory,,An alternate routing metric for this route. The semantics of this metric are determined by the routing-protocol specified in the route's ipRouteProto value. If this metric is not used, its value should be set to -1.
.1.3.6.1.2.1.4.21.1.5,RFC1213-MIB::ipRouteMetric3,INTEGER,read-write,,mandatory,,An alternate routing metric for this route. The semantics of this metric are determined by the routing-protocol specified in the route's ipRouteProto value. If this metric is not used, its value should be set to -1.
.1.3.6.1.2.1.4.21.1.6,RFC1213-MIB::ipRouteMetric4,INTEGER,read-write,,mandatory,,An alternate routing metric for this route. The semantics of this metric are determined by the routing-protocol specified in the route's ipRouteProto value. If this metric is not used, its value should be set to -1.
.1.3.6.1.2.1.4.21.1.7,RFC1213-MIB::ipRouteNextHop,IpAddress,read-write,,mandatory,,The IP address of the next hop of this route. (In the case of a route bound to an interface which is realized via a broadcast media, the value of this field is the agent's IP address on that interface.)
.1.3.6.1.2.1.4.21.1.8,RFC1213-MIB::ipRouteType,INTEGER,read-write,,mandatory,other(1):invalid(2):direct(3):indirect(4),The type of route. Note that the values direct(3) and indirect(4) refer to the notion of direct and indirect routing in the IP architecture. Setting this object to the value invalid(2) has the effect of invalidating the corresponding entry in the ipRouteTable object. That is, it effectively dissasociates the destination identified with said entry from the route identified with said entry. It is an implementation-specific matter as to whether the agent removes an invalidated entry from the table. Accordingly, management stations must be prepared to receive tabular information from agents that corresponds to entries not currently in use. Proper interpretation of such entries requires examination of the relevant ipRouteType object.
.1.3.6.1.2.1.4.21.1.9,RFC1213-MIB::ipRouteProto,INTEGER,read-only,,mandatory,other(1):local(2):netmgmt(3):icmp(4):egp(5):ggp(6):hello(7):rip(8):is-is(9):es-is(10):ciscoIgrp(11):bbnSpfIgp(12):ospf(13):bgp(14),The routing mechanism via which this route was learned. Inclusion of values for gateway routing protocols is not intended to imply that hosts should support those protocols.
.1.3.6.1.2.1.4.21.1.10,RFC1213-MIB::ipRouteAge,INTEGER,read-write,,mandatory,,The number of seconds since this route was last updated or otherwise determined to be correct. Note that no semantics of `too old' can be implied except through knowledge of the routing protocol by which the route was learned.
.1.3.6.1.2.1.4.21.1.11,RFC1213-MIB::ipRouteMask,IpAddress,read-write,,mandatory,,Indicate the mask to be logical-ANDed with the destination address before being compared to the value in the ipRouteDest field. For those systems that do not support arbitrary subnet masks, an agent constructs the value of the ipRouteMask by determining whether the value of the correspondent ipRouteDest field belong to a class-A, B, or C network, and then using one of: mask network 255.0.0.0 class-A 255.255.0.0 class-B 255.255.255.0 class-C If the value of the ipRouteDest is 0.0.0.0 (a default route), then the mask value is also 0.0.0.0. It should be noted that all IP routing subsystems implicitly use this mechanism.
.1.3.6.1.2.1.4.21.1.12,RFC1213-MIB::ipRouteMetric5,INTEGER,read-write,,mandatory,,An alternate routing metric for this route. The semantics of this metric are determined by the routing-protocol specified in the route's ipRouteProto value. If this metric is not used, its value should be set to -1.
.1.3.6.1.2.1.4.21.1.13,RFC1213-MIB::ipRouteInfo,OBJECT,read-only,,mandatory,,A reference to MIB definitions specific to the particular routing protocol which is responsible for this route, as determined by the value specified in the route's ipRouteProto value. If this information is not present, its value should be set to the OBJECT IDENTIFIER { 0 0 }, which is a syntatically valid object identifier, and any conformant implementation of ASN.1 and BER must be able to generate and recognize this value.
.1.3.6.1.2.1.4.22,RFC1213-MIB::ipNetToMediaTable,,not-accessible,,mandatory,,The IP Address Translation table used for mapping from IP addresses to physical addresses.
.1.3.6.1.2.1.4.22.1,RFC1213-MIB::ipNetToMediaEntry,,not-accessible,ipNetToMediaIfIndex:ipNetToMediaNetAddress,mandatory,,Each entry contains one IpAddress to `physical' address equivalence.
.1.3.6.1.2.1.4.22.1.1,RFC1213-MIB::ipNetToMediaIfIndex,INTEGER,read-write,,mandatory,,The interface on which this entry's equivalence is effective. The interface identified by a particular value of this index is the same interface as identified by the same value of ifIndex.
.1.3.6.1.2.1.4.22.1.2,RFC1213-MIB::ipNetToMediaPhysAddress,OCTET,read-write,,mandatory,,The media-dependent `physical' address.
.1.3.6.1.2.1.4.22.1.3,RFC1213-MIB::ipNetToMediaNetAddress,IpAddress,read-write,,mandatory,,The IpAddress corresponding to the media- dependent `physical' address.
.1.3.6.1.2.1.4.22.1.4,RFC1213-MIB::ipNetToMediaType,INTEGER,read-write,,mandatory,other(1):invalid(2):dynamic(3):static(4),The type of mapping. Setting this object to the value invalid(2) has the effect of invalidating the corresponding entry in the ipNetToMediaTable. That is, it effectively dissasociates the interface identified with said entry from the mapping identified with said entry. It is an implementation-specific matter as to whether the agent removes an invalidated entry from the table. Accordingly, management stations must be prepared to receive tabular information from agents that corresponds to entries not currently in use. Proper interpretation of such entries requires examination of the relevant ipNetToMediaType object.
.1.3.6.1.2.1.4.23,RFC1213-MIB::ipRoutingDiscards,Counter32,read-only,,mandatory,,The number of routing entries which were chosen to be discarded even though they are valid. One possible reason for discarding such an entry could be to free-up buffer space for other routing entries.
.1.3.6.1.2.1.5,RFC1213-MIB::icmp,,,,,,
.1.3.6.1.2.1.5.1,RFC1213-MIB::icmpInMsgs,Counter32,read-only,,mandatory,,The total number of ICMP messages which the entity received. Note that this counter includes all those counted by icmpInErrors.
.1.3.6.1.2.1.5.2,RFC1213-MIB::icmpInErrors,Counter32,read-only,,mandatory,,The number of ICMP messages which the entity received but determined as having ICMP-specific errors (bad ICMP checksums, bad length, etc.).
.1.3.6.1.2.1.5.3,RFC1213-MIB::icmpInDestUnreachs,Counter32,read-only,,mandatory,,The number of ICMP Destination Unreachable messages received.
.1.3.6.1.2.1.5.4,RFC1213-MIB::icmpInTimeExcds,Counter32,read-only,,mandatory,,The number of ICMP Time Exceeded messages received.
.1.3.6.1.2.1.5.5,RFC1213-MIB::icmpInParmProbs,Counter32,read-only,,mandatory,,The number of ICMP Parameter Problem messages received.
.1.3.6.1.2.1.5.6,RFC1213-MIB::icmpInSrcQuenchs,Counter32,read-only,,mandatory,,The number of ICMP Source Quench messages received.
.1.3.6.1.2.1.5.7,RFC1213-MIB::icmpInRedirects,Counter32,read-only,,mandatory,,The number of ICMP Redirect messages received.
.1.3.6.1.2.1.5.8,RFC1213-MIB::icmpInEchos,Counter32,read-only,,mandatory,,The number of ICMP Echo (request) messages received.
.1.3.6.1.2.1.5.9,RFC1213-MIB::icmpInEchoReps,Counter32,read-only,,mandatory,,The number of ICMP Echo Reply messages received.
.1.3.6.1.2.1.5.10,RFC1213-MIB::icmpInTimestamps,Counter32,read-only,,mandatory,,The number of ICMP Timestamp (request) messages received.
.1.3.6.1.2.1.5.11,RFC1213-MIB::icmpInTimestampReps,Counter32,read-only,,mandatory,,The number of ICMP Timestamp Reply messages received.
.1.3.6.1.2.1.5.12,RFC1213-MIB::icmpInAddrMasks,Counter32,read-only,,mandatory,,The number of ICMP Address Mask Request messages received.
.1.3.6.1.2.1.5.13,RFC1213-MIB::icmpInAddrMaskReps,Counter32,read-only,,mandatory,,The number of ICMP Address Mask Reply messages received.
.1.3.6.1.2.1.5.14,RFC1213-MIB::icmpOutMsgs,Counter32,read-only,,mandatory,,The total number of ICMP messages which this entity attempted to send. Note that this counter includes all those counted by icmpOutErrors.
.1.3.6.1.2.1.5.15,RFC1213-MIB::icmpOutErrors,Counter32,read-only,,mandatory,,The number of ICMP messages which this entity did not send due to problems discovered within ICMP such as a lack of buffers. This value should not include errors discovered outside the ICMP layer such as the inability of IP to route the resultant datagram. In some implementations there may be no types of error which contribute to this counter's value.
.1.3.6.1.2.1.5.16,RFC1213-MIB::icmpOutDestUnreachs,Counter32,read-only,,mandatory,,The number of ICMP Destination Unreachable messages sent.
.1.3.6.1.2.1.5.17,RFC1213-MIB::icmpOutTimeExcds,Counter32,read-only,,mandatory,,The number of ICMP Time Exceeded messages sent.
.1.3.6.1.2.1.5.18,RFC1213-MIB::icmpOutParmProbs,Counter32,read-only,,mandatory,,The number of ICMP Parameter Problem messages sent.
.1.3.6.1.2.1.5.19,RFC1213-MIB::icmpOutSrcQuenchs,Counter32,read-only,,mandatory,,The number of ICMP Source Quench messages sent.
.1.3.6.1.2.1.5.20,RFC1213-MIB::icmpOutRedirects,Counter32,read-only,,mandatory,,The number of ICMP Redirect messages sent. For a host, this object will always be zero, since hosts do not send redirects.
.1.3.6.1.2.1.5.21,RFC1213-MIB::icmpOutEchos,Counter32,read-only,,mandatory,,The number of ICMP Echo (request) messages sent.
.1.3.6.1.2.1.5.22,RFC1213-MIB::icmpOutEchoReps,Counter32,read-only,,mandatory,,The number of ICMP Echo Reply messages sent.
.1.3.6.1.2.1.5.23,RFC1213-MIB::icmpOutTimestamps,Counter32,read-only,,mandatory,,The number of ICMP Timestamp (request) messages sent.
.1.3.6.1.2.1.5.24,RFC1213-MIB::icmpOutTimestampReps,Counter32,read-only,,mandatory,,The number of ICMP Timestamp Reply messages sent.
.1.3.6.1.2.1.5.25,RFC1213-MIB::icmpOutAddrMasks,Counter32,read-only,,mandatory,,The number of ICMP Address Mask Request messages sent.
.1.3.6.1.2.1.5.26,RFC1213-MIB::icmpOutAddrMaskReps,Counter32,read-only,,mandatory,,The number of ICMP Address Mask Reply messages sent.
.1.3.6.1.2.1.6,RFC1213-MIB::tcp,,,,,,
.1.3.6.1.2.1.6.1,RFC1213-MIB::tcpRtoAlgorithm,INTEGER,read-only,,mandatory,other(1):constant(2):rsre(3):vanj(4),The algorithm used to determine the timeout value used for retransmitting unacknowledged octets.
.1.3.6.1.2.1.6.2,RFC1213-MIB::tcpRtoMin,INTEGER,read-only,,mandatory,,The minimum value permitted by a TCP implementation for the retransmission timeout, measured in milliseconds. More refined semantics for objects of this type depend upon the algorithm used to determine the retransmission timeout. In particular, when the timeout algorithm is rsre(3), an object of this type has the semantics of the LBOUND quantity described in RFC 793.
.1.3.6.1.2.1.6.3,RFC1213-MIB::tcpRtoMax,INTEGER,read-only,,mandatory,,The maximum value permitted by a TCP implementation for the retransmission timeout, measured in milliseconds. More refined semantics for objects of this type depend upon the algorithm used to determine the retransmission timeout. In particular, when the timeout algorithm is rsre(3), an object of this type has the semantics of the UBOUND quantity described in RFC 793.
.1.3.6.1.2.1.6.4,RFC1213-MIB::tcpMaxConn,INTEGER,read-only,,mandatory,,The limit on the total number of TCP connections the entity can support. In entities where the maximum number of connections is dynamic, this object should contain the value -1.
.1.3.6.1.2.1.6.5,RFC1213-MIB::tcpActiveOpens,Counter32,read-only,,mandatory,,The number of times TCP connections have made a direct transition to the SYN-SENT state from the CLOSED state.
.1.3.6.1.2.1.6.6,RFC1213-MIB::tcpPassiveOpens,Counter32,read-only,,mandatory,,The number of times TCP connections have made a direct transition to the SYN-RCVD state from the LISTEN state.
.1.3.6.1.2.1.6.7,RFC1213-MIB::tcpAttemptFails,Counter32,read-only,,mandatory,,The number of times TCP connections have made a direct transition to the CLOSED state from either the SYN-SENT state or the SYN-RCVD state, plus the number of times TCP connections have made a direct transition to the LISTEN state from the SYN-RCVD state.
.1.3.6.1.2.1.6.8,RFC1213-MIB::tcpEstabResets,Counter32,read-only,,mandatory,,The number of times TCP connections have made a direct transition to the CLOSED state from either the ESTABLISHED state or the CLOSE-WAIT state.
.1.3.6.1.2.1.6.9,RFC1213-MIB::tcpCurrEstab,Gauge32,read-only,,mandatory,,The number of TCP connections for which the current state is either ESTABLISHED or CLOSE- WAIT.
.1.3.6.1.2.1.6.10,RFC1213-MIB::tcpInSegs,Counter32,read-only,,mandatory,,The total number of segments received, including those received in error. This count includes segments received on currently established connections.
.1.3.6.1.2.1.6.11,RFC1213-MIB::tcpOutSegs,Counter32,read-only,,mandatory,,The total number of segments sent, including those on current connections but excluding those containing only retransmitted octets.
.1.3.6.1.2.1.6.12,RFC1213-MIB::tcpRetransSegs,Counter32,read-only,,mandatory,,The total number of segments retransmitted - that is, the number of TCP segments transmitted containing one or more previously transmitted octets.
.1.3.6.1.2.1.6.13,RFC1213-MIB::tcpConnTable,,not-accessible,,mandatory,,A table containing TCP connection-specific information.
.1.3.6.1.2.1.6.13.1,RFC1213-MIB::tcpConnEntry,,not-accessible,tcpConnLocalAddress:tcpConnLocalPort:tcpConnRemAddress:tcpConnRemPort,mandatory,,Information about a particular current TCP connection. An object of this type is transient, in that it ceases to exist when (or soon after) the connection makes the transition to the CLOSED state.
.1.3.6.1.2.1.6.13.1.1,RFC1213-MIB::tcpConnState,INTEGER,read-write,,mandatory,closed(1):listen(2):synSent(3):synReceived(4):established(5):finWait1(6):finWait2(7):closeWait(8):lastAck(9):closing(10):timeWait(11):deleteTCB(12),The state of this TCP connection. The only value which may be set by a management station is deleteTCB(12). Accordingly, it is appropriate for an agent to return a `badValue' response if a management station attempts to set this object to any other value. If a management station sets this object to the value deleteTCB(12), then this has the effect of deleting the TCB (as defined in RFC 793) of the corresponding connection on the managed node, resulting in immediate termination of the connection. As an implementation-specific option, a RST segment may be sent from the managed node to the other TCP endpoint (note however that RST segments are not sent reliably).
.1.3.6.1.2.1.6.13.1.2,RFC1213-MIB::tcpConnLocalAddress,IpAddress,read-only,,mandatory,,The local IP address for this TCP connection. In the case of a connection in the listen state which is willing to accept connections for any IP interface associated with the node, the value 0.0.0.0 is used.
.1.3.6.1.2.1.6.13.1.3,RFC1213-MIB::tcpConnLocalPort,INTEGER,read-only,,mandatory,,The local port number for this TCP connection.
.1.3.6.1.2.1.6.13.1.4,RFC1213-MIB::tcpConnRemAddress,IpAddress,read-only,,mandatory,,The remote IP address for this TCP connection.
.1.3.6.1.2.1.6.13.1.5,RFC1213-MIB::tcpConnRemPort,INTEGER,read-only,,mandatory,,The remote port number for this TCP connection.
.1.3.6.1.2.1.6.14,RFC1213-MIB::tcpInErrs,Counter32,read-only,,mandatory,,The total number of segments received in error (e.g., bad TCP checksums).
.1.3.6.1.2.1.6.15,RFC1213-MIB::tcpOutRsts,Counter32,read-only,,mandatory,,The number of TCP segments sent containing the RST flag.
.1.3.6.1.2.1.7,RFC1213-MIB::udp,,,,,,
.1.3.6.1.2.1.7.1,RFC1213-MIB::udpInDatagrams,Counter32,read-only,,mandatory,,The total number of UDP datagrams delivered to UDP users.
.1.3.6.1.2.1.7.2,RFC1213-MIB::udpNoPorts,Counter32,read-only,,mandatory,,The total number of received UDP datagrams for which there was no application at the destination port.
.1.3.6.1.2.1.7.3,RFC1213-MIB::udpInErrors,Counter32,read-only,,mandatory,,The number of received UDP datagrams that could not be delivered for reasons other than the lack of an application at the destination port.
.1.3.6.1.2.1.7.4,RFC1213-MIB::udpOutDatagrams,Counter32,read-only,,mandatory,,The total number of UDP datagrams sent from this entity.
.1.3.6.1.2.1.7.5,RFC1213-MIB::udpTable,,not-accessible,,mandatory,,A table containing UDP listener information.
.1.3.6.1.2.1.7.5.1,RFC1213-MIB::udpEntry,,not-accessible,udpLocalAddress:udpLocalPort,mandatory,,Information about a particular current UDP listener.
.1.3.6.1.2.1.7.5.1.1,RFC1213-MIB::udpLocalAddress,IpAddress,read-only,,mandatory,,The local IP address for this UDP listener. In the case of a UDP listener which is willing to accept datagrams for any IP interface associated with the node, the value 0.0.0.0 is used.
.1.3.6.1.2.1.7.5.1.2,RFC1213-MIB::udpLocalPort,INTEGER,read-only,,mandatory,,The local port number for this UDP listener.
.1.3.6.1.2.1.8,RFC1213-MIB::egp,,,,,,
.1.3.6.1.2.1.8.1,RFC1213-MIB::egpInMsgs,Counter32,read-only,,mandatory,,The number of EGP messages received without error.
.1.3.6.1.2.1.8.2,RFC1213-MIB::egpInErrors,Counter32,read-only,,mandatory,,The number of EGP messages received that proved to be in error.
.1.3.6.1.2.1.8.3,RFC1213-MIB::egpOutMsgs,Counter32,read-only,,mandatory,,The total number of locally generated EGP messages.
.1.3.6.1.2.1.8.4,RFC1213-MIB::egpOutErrors,Counter32,read-only,,mandatory,,The number of locally generated EGP messages not sent due to resource limitations within an EGP entity.
.1.3.6.1.2.1.8.5,RFC1213-MIB::egpNeighTable,,not-accessible,,mandatory,,The EGP neighbor table.
.1.3.6.1.2.1.8.5.1,RFC1213-MIB::egpNeighEntry,,not-accessible,egpNeighAddr,mandatory,,Information about this entity's relationship with a particular EGP neighbor.
.1.3.6.1.2.1.8.5.1.1,RFC1213-MIB::egpNeighState,INTEGER,read-only,,mandatory,idle(1):acquisition(2):down(3):up(4):cease(5),The EGP state of the local system with respect to this entry's EGP neighbor. Each EGP state is represented by a value that is one greater than the numerical value associated with said state in RFC 904.
.1.3.6.1.2.1.8.5.1.2,RFC1213-MIB::egpNeighAddr,IpAddress,read-only,,mandatory,,The IP address of this entry's EGP neighbor.
.1.3.6.1.2.1.8.5.1.3,RFC1213-MIB::egpNeighAs,INTEGER,read-only,,mandatory,,The autonomous system of this EGP peer. Zero should be specified if the autonomous system number of the neighbor is not yet known.
.1.3.6.1.2.1.8.5.1.4,RFC1213-MIB::egpNeighInMsgs,Counter32,read-only,,mandatory,,The number of EGP messages received without error from this EGP peer.
.1.3.6.1.2.1.8.5.1.5,RFC1213-MIB::egpNeighInErrs,Counter32,read-only,,mandatory,,The number of EGP messages received from this EGP peer that proved to be in error (e.g., bad EGP checksum).
.1.3.6.1.2.1.8.5.1.6,RFC1213-MIB::egpNeighOutMsgs,Counter32,read-only,,mandatory,,The number of locally generated EGP messages to this EGP peer.
.1.3.6.1.2.1.8.5.1.7,RFC1213-MIB::egpNeighOutErrs,Counter32,read-only,,mandatory,,The number of locally generated EGP messages not sent to this EGP peer due to resource limitations within an EGP entity.
.1.3.6.1.2.1.8.5.1.8,RFC1213-MIB::egpNeighInErrMsgs,Counter32,read-only,,mandatory,,The number of EGP-defined error messages received from this EGP peer.
.1.3.6.1.2.1.8.5.1.9,RFC1213-MIB::egpNeighOutErrMsgs,Counter32,read-only,,mandatory,,The number of EGP-defined error messages sent to this EGP peer.
.1.3.6.1.2.1.8.5.1.10,RFC1213-MIB::egpNeighStateUps,Counter32,read-only,,mandatory,,The number of EGP state transitions to the UP state with this EGP peer.
.1.3.6.1.2.1.8.5.1.11,RFC1213-MIB::egpNeighStateDowns,Counter32,read-only,,mandatory,,The number of EGP state transitions from the UP state to any other state with this EGP peer.
.1.3.6.1.2.1.8.5.1.12,RFC1213-MIB::egpNeighIntervalHello,INTEGER,read-only,,mandatory,,The interval between EGP Hello command retransmissions (in hundredths of a second). This represents the t1 timer as defined in RFC 904.
.1.3.6.1.2.1.8.5.1.13,RFC1213-MIB::egpNeighIntervalPoll,INTEGER,read-only,,mandatory,,The interval between EGP poll command retransmissions (in hundredths of a second). This represents the t3 timer as defined in RFC 904.
.1.3.6.1.2.1.8.5.1.14,RFC1213-MIB::egpNeighMode,INTEGER,read-only,,mandatory,active(1):passive(2),The polling mode of this EGP entity, either passive or active.
.1.3.6.1.2.1.8.5.1.15,RFC1213-MIB::egpNeighEventTrigger,INTEGER,read-write,,mandatory,start(1):stop(2),A control variable used to trigger operator- initiated Start and Stop events. When read, this variable always returns the most recent value that egpNeighEventTrigger was set to. If it has not been set since the last initialization of the network management subsystem on the node, it returns a value of `stop'. When set, this variable causes a Start or Stop event on the specified neighbor, as specified on pages 8-10 of RFC 904. Briefly, a Start event causes an Idle peer to begin neighbor acquisition and a non-Idle peer to reinitiate neighbor acquisition. A stop event causes a non-Idle peer to return to the Idle state until a Start event occurs, either via egpNeighEventTrigger or otherwise.
.1.3.6.1.2.1.8.6,RFC1213-MIB::egpAs,INTEGER,read-only,,mandatory,,The autonomous system number of this EGP entity.
.1.3.6.1.2.1.10,SNMPv2-SMI::transmission,,,,,,
.1.3.6.1.2.1.11,RFC1213-MIB::snmp,,,,,,
.1.3.6.1.2.1.11.1,RFC1213-MIB::snmpInPkts,Counter32,read-only,,mandatory,,The total number of Messages delivered to the SNMP entity from the transport service.
.1.3.6.1.2.1.11.2,RFC1213-MIB::snmpOutPkts,Counter32,read-only,,mandatory,,The total number of SNMP Messages which were passed from the SNMP protocol entity to the transport service.
.1.3.6.1.2.1.11.3,RFC1213-MIB::snmpInBadVersions,Counter32,read-only,,mandatory,,The total number of SNMP Messages which were delivered to the SNMP protocol entity and were for an unsupported SNMP version.
.1.3.6.1.2.1.11.4,RFC1213-MIB::snmpInBadCommunityNames,Counter32,read-only,,mandatory,,The total number of SNMP Messages delivered to the SNMP protocol entity which used a SNMP community name not known to said entity.
.1.3.6.1.2.1.11.5,RFC1213-MIB::snmpInBadCommunityUses,Counter32,read-only,,mandatory,,The total number of SNMP Messages delivered to the SNMP protocol entity which represented an SNMP operation which was not allowed by the SNMP community named in the Message.
.1.3.6.1.2.1.11.6,RFC1213-MIB::snmpInASNParseErrs,Counter32,read-only,,mandatory,,The total number of ASN.1 or BER errors encountered by the SNMP protocol entity when decoding received SNMP Messages.
.1.3.6.1.2.1.11.8,RFC1213-MIB::snmpInTooBigs,Counter32,read-only,,mandatory,,The total number of SNMP PDUs which were delivered to the SNMP protocol entity and for which the value of the error-status field is `tooBig'.
.1.3.6.1.2.1.11.9,RFC1213-MIB::snmpInNoSuchNames,Counter32,read-only,,mandatory,,The total number of SNMP PDUs which were delivered to the SNMP protocol entity and for which the value of the error-status field is `noSuchName'.
.1.3.6.1.2.1.11.10,RFC1213-MIB::snmpInBadValues,Counter32,read-only,,mandatory,,The total number of SNMP PDUs which were delivered to the SNMP protocol entity and for which the value of the error-status field is `badValue'.
.1.3.6.1.2.1.11.11,RFC1213-MIB::snmpInReadOnlys,Counter32,read-only,,mandatory,,The total number valid SNMP PDUs which were delivered to the SNMP protocol entity and for which the value of the error-status field is `readOnly'. It should be noted that it is a protocol error to generate an SNMP PDU which contains the value `readOnly' in the error-status field, as such this object is provided as a means of detecting incorrect implementations of the SNMP.
.1.3.6.1.2.1.11.12,RFC1213-MIB::snmpInGenErrs,Counter32,read-only,,mandatory,,The total number of SNMP PDUs which were delivered to the SNMP protocol entity and for which the value of the error-status field is `genErr'.
.1.3.6.1.2.1.11.13,RFC1213-MIB::snmpInTotalReqVars,Counter32,read-only,,mandatory,,The total number of MIB objects which have been retrieved successfully by the SNMP protocol entity as the result of receiving valid SNMP Get-Request and Get-Next PDUs.
.1.3.6.1.2.1.11.14,RFC1213-MIB::snmpInTotalSetVars,Counter32,read-only,,mandatory,,The total number of MIB objects which have been altered successfully by the SNMP protocol entity as the result of receiving valid SNMP Set-Request PDUs.
.1.3.6.1.2.1.11.15,RFC1213-MIB::snmpInGetRequests,Counter32,read-only,,mandatory,,The total number of SNMP Get-Request PDUs which have been accepted and processed by the SNMP protocol entity.
.1.3.6.1.2.1.11.16,RFC1213-MIB::snmpInGetNexts,Counter32,read-only,,mandatory,,The total number of SNMP Get-Next PDUs which have been accepted and processed by the SNMP protocol entity.
.1.3.6.1.2.1.11.17,RFC1213-MIB::snmpInSetRequests,Counter32,read-only,,mandatory,,The total number of SNMP Set-Request PDUs which have been accepted and processed by the SNMP protocol entity.
.1.3.6.1.2.1.11.18,RFC1213-MIB::snmpInGetResponses,Counter32,read-only,,mandatory,,The total number of SNMP Get-Response PDUs which have been accepted and processed by the SNMP protocol entity.
.1.3.6.1.2.1.11.19,RFC1213-MIB::snmpInTraps,Counter32,read-only,,mandatory,,The total number of SNMP Trap PDUs which have been accepted and processed by the SNMP protocol entity.
.1.3.6.1.2.1.11.20,RFC1213-MIB::snmpOutTooBigs,Counter32,read-only,,mandatory,,The total number of SNMP PDUs which were generated by the SNMP protocol entity and for which the value of the error-status field is `tooBig.'
.1.3.6.1.2.1.11.21,RFC1213-MIB::snmpOutNoSuchNames,Counter32,read-only,,mandatory,,The total number of SNMP PDUs which were generated by the SNMP protocol entity and for which the value of the error-status is `noSuchName'.
.1.3.6.1.2.1.11.22,RFC1213-MIB::snmpOutBadValues,Counter32,read-only,,mandatory,,The total number of SNMP PDUs which were generated by the SNMP protocol entity and for which the value of the error-status field is `badValue'.
.1.3.6.1.2.1.11.24,RFC1213-MIB::snmpOutGenErrs,Counter32,read-only,,mandatory,,The total number of SNMP PDUs which were generated by the SNMP protocol entity and for which the value of the error-status field is `genErr'.
.1.3.6.1.2.1.11.25,RFC1213-MIB::snmpOutGetRequests,Counter32,read-only,,mandatory,,The total number of SNMP Get-Request PDUs which have been generated by the SNMP protocol entity.
.1.3.6.1.2.1.11.26,RFC1213-MIB::snmpOutGetNexts,Counter32,read-only,,mandatory,,The total number of SNMP Get-Next PDUs which have been generated by the SNMP protocol entity.
.1.3.6.1.2.1.11.27,RFC1213-MIB::snmpOutSetRequests,Counter32,read-only,,mandatory,,The total number of SNMP Set-Request PDUs which have been generated by the SNMP protocol entity.
.1.3.6.1.2.1.11.28,RFC1213-MIB::snmpOutGetResponses,Counter32,read-only,,mandatory,,The total number of SNMP Get-Response PDUs which have been generated by the SNMP protocol entity.
.1.3.6.1.2.1.11.29,RFC1213-MIB::snmpOutTraps,Counter32,read-only,,mandatory,,The total number of SNMP Trap PDUs which have been generated by the SNMP protocol entity.
.1.3.6.1.2.1.11.30,RFC1213-MIB::snmpEnableAuthenTraps,INTEGER,read-write,,mandatory,enabled(1):disabled(2),Indicates whether the SNMP agent process is permitted to generate authentication-failure traps. The value of this object overrides any configuration information; as such, it provides a means whereby all authentication-failure traps may be disabled. Note that it is strongly recommended that this object be stored in non-volatile memory so that it remains constant between re-initializations of the network management system.
.1.3.6.1.2.1.30,IANAifType-MIB::ianaifType,,,,,,This MIB module defines the IANAifType Textual Convention, and thus the enumerated values of the ifType object defined in MIB-II's ifTable.
.1.3.6.1.3,SNMPv2-SMI::experimental,,,,,,
.1.3.6.1.4,SNMPv2-SMI::private,,,,,,
.1.3.6.1.4.1,SNMPv2-SMI::enterprises,,,,,,
.1.3.6.1.4.1.838,XEDIA-REG::xedia,,,,,,Xedia's node in the naming hierarchy as assigned by the Internet Assigned Numbers Authority (IANA).
.1.3.6.1.4.1.838.2,XEDIA-REG::xediaRegistrations,,,,,,This module defines the enterprises OID of Xedia and other company-wide definitions. The resulting top-level name space under the xedia branch looks like this: xedia (agentConfig - an older MIB defined for MADswitch) xediaRegistrations - this module xediaMibs - MIB modules defined in .mi2 files xediaClasses - CLASS modules defined .mo files xediaProducts - AGENT-CAPABILITIES modules defined  in .mi2 files This is where you reserve an OIDs for a MIB module. The values are defined in the appropriate .mi2/.mo files but are in comments here so that we can have one document under source control to reserve and catalog values.
.1.3.6.1.4.1.838.3,XEDIA-REG::xediaMibs,,,,,,A registration point under which all (new) Xedia MIB modules are defined.
.1.3.6.1.4.1.838.3.2,XEDIA-TRAFFIC-MGMT-MIB::xediaTrafficMgmtMIB,,,,,,This module defines objects for the management of Xedia's proprietary Traffic Management capability. This capability is based on Class-Based Queueing (CBQ). The purpose of the Xedia Traffic Management (xtm) function is to share access to an interface's bandwidth based on policies set up by the administrator.
.1.3.6.1.4.1.838.3.2.1,XEDIA-TRAFFIC-MGMT-MIB::xtmObjects,,,,,,
.1.3.6.1.4.1.838.3.2.1.2,XEDIA-TRAFFIC-MGMT-MIB::xtmClassTable,,not-accessible,,current,,This table is a 'flattened' version of a hierarchical class trees that specify the bandwidth allocation for the CBQ interfaces of the system. Each tree is rooted at an interface. A class may either be a leaf, meaning it has no children, or it may be an interior class which has children. As packets are forwarded out an interface, they are compared to the 'flow definition' of each class down the tree until a matching leaf is found or until all classes are traversed. Once a matching class is found, the packet is transmitted or not based on the constraints configured for the class, most importantly the allocated bandwidth as identified by xtmClassRate. If no matching class is found, the packet is dropped. The 'flow definition' for a class can be defined based on inclusive ranges of the following packet fields: o Source IP Address (or a domain name) o Destination IP Address (or a domain name) o Protocol above layer 3 (e.g., UDP, TCP, ICMP, etc.) o Source Port (which identifies service, e.g., FTP, Telnet, SMTP, etc.) o Destination Port It is important that packets only match zero or one traffic class. In order for this to be true, certain rules must be enforced when classes are defined. Specifically, all 'sibling' classes must be defined using the same criteria. Also, children must use criteria not already specified by one of their ancestors or they must specify a subrange of an already specified criteria. Therefore, this tree would be legal: interface 1 subnet A protocol UDP port SNMP protocol TCP subnet B But this tree would be illegal: interface 2 subnet A subnet B (illegal -- not subrange of parent) protocol TCP (illegal -- different criteria than sibling)
.1.3.6.1.4.1.838.3.2.1.2.1,XEDIA-TRAFFIC-MGMT-MIB::xtmClassEntry,,not-accessible,ifIndex:xtmClassName,current,,Information about a single traffic class. Traffic classes are identified by their associated interface's ifIndex and their name. (Which means class names must be unique for a particular interface.) Traffic classes can be created and destroyed using this table's xtmClassRowStatus object. A class cannot be used by the run-time system (xtmClassRowStatus = 'active(1)') if it does not follow the rules listed in the DESCRIPTION of the previous object. In this case, the xtmClassRowStatus will remain 'notReady(3)' and the xtmClassOperStatus will be 'downConflict(3)'. Also, in order to become active, the user must have specified a valid value for xtmClassParent and xtmClassRate. All other settable objects may be left at their default values. Finally, the following objects cannot be modified once the row is active: xtmClassParent, and xtmClassQueueElasticityFactor.
.1.3.6.1.4.1.838.3.2.1.2.1.1,XEDIA-TRAFFIC-MGMT-MIB::xtmClassName,OCTET,not-accessible,,current,,A user-defined name for the traffic class. This is the unique identifier for the class within the scope of the interface. For example, the class that defines the IP address range for a particular customer might be 'Customer Fred Co.'
.1.3.6.1.4.1.838.3.2.1.2.1.2,XEDIA-TRAFFIC-MGMT-MIB::xtmClassParent,OCTET,read-create,,current,,This object will have one of the following values: - the value of xtmClassName for the parent class in the hierarchy, - the value 'interface' if the class is directly under the interface, which is the root of the tree, or - the value 'orphan' if the class is defined but not yet inserted into the tree. If a parent name is specified, the row cannot become active (have its xtmClassRowStatus set to 'active(1)' unless the parent is valid and is itself active. Note that an interface may have several traffic classes with an xtmClassParent of 'interface'. Note also that an 'orphan' class cannot become 'active(1)' - it must first have a valid parent specified.
.1.3.6.1.4.1.838.3.2.1.2.1.13,XEDIA-TRAFFIC-MGMT-MIB::xtmClassRate,Integer32,read-create,,current,,A fraction of the bandwidth of the root interface to be allocated to this traffic class. Note that specifying 0 bits/second effectively filters all traffic that matches this class' flow specification. Also note that the sum of bit rates for all classes defined under the same class must be less than or equal to xtmClassRate of the parent.
.1.3.6.1.4.1.838.3.2.1.2.1.14,XEDIA-TRAFFIC-MGMT-MIB::xtmClassBounded,INTEGER,read-create,,current,true(1):false(2),The value of this object is 'true(1)' if the class is bounded (can't 'borrow' bandwidth from its parent class) and 'false(2)' otherwise.
.1.3.6.1.4.1.838.3.2.1.2.1.15,XEDIA-TRAFFIC-MGMT-MIB::xtmClassPriority,Integer32,read-create,,current,,The priority for this class. The smaller the value, the higher the priority. Delay-sensitive flows (such as video or audio) should be given higher priority values.
.1.3.6.1.4.1.838.3.2.1.2.1.22,XEDIA-TRAFFIC-MGMT-MIB::xtmClassOperStatus,INTEGER,read-only,,current,up(1):down(2):downConflict(3):autoClassActive(4),The actual operational status of the traffic class. The value 'up(1)' means this traffic class is in use, the value 'down(2)' indicates the traffic class is not in use either due to an internal problem or because it (or an ancestor) is administratively disabled, and the value 'downConflict(3)' indicates the class definition conflicts with those of its siblings. The value autoClassActive(4) means that the class is a dynamically created AutoClass, which may not be modified in any way until it is saved to Non-Volatile configuration memory.  After an AutoClass is saved to NVRAM, it's operational status  will transistion to up(1).
.1.3.6.1.4.1.838.3.2.1.2.1.23,XEDIA-TRAFFIC-MGMT-MIB::xtmClassOperMsg,OCTET,read-only,,current,,The operational message associated with the operational status. The message usually provides additional information that may not be obvious through the operational status.
.1.3.6.1.4.1.838.3.2.1.2.1.24,XEDIA-TRAFFIC-MGMT-MIB::xtmClassBwUse,INTEGER,read-only,,current,atLimit(1):underLimit(2):overLimit(3),An indication of whether this traffic class has used its allocated bandwidth (as indicated by xtmClassPercent), has not used its allocated bandwidth or has used more than its allocated bandwidth and is therefore 'atLimit(1)', 'underLimit(2)', or 'overLimit(3)' respectively.
.1.3.6.1.4.1.838.3.2.1.2.1.25,XEDIA-TRAFFIC-MGMT-MIB::xtmClassUnsatisfied,INTEGER,read-only,,current,true(1):false(2),An indication of whether this traffic class is 'unsatisfied'. The value of this object is 'true(1)' if it is underLimit and has a persistent backlog, meaning it has packets waiting in its queue. The value is 'false(1)' otherwise. Note that a class can be considered satisfied if it is underLimit and it just hasn't had anything to transmit.  The presence of an unsatisfied class indicates that some other class is overLimit and 'hogging' bandwidth. Persistently unsatisfied classes indicate that tuning some of the parameters (such as xtmClassMaxIdle or xtmClassBounded) may be necessary.
.1.3.6.1.4.1.838.3.2.1.2.1.26,XEDIA-TRAFFIC-MGMT-MIB::xtmClassQueueSize,Gauge32,read-only,,current,,The size of the queue associated with this traffic class. This is the maximum number of packets that can be in the queue, not the number that are currently queued (see xtmClassStatsQueuedPkts).
.1.3.6.1.4.1.838.3.2.1.2.1.27,XEDIA-TRAFFIC-MGMT-MIB::xtmClassRowStatus,INTEGER,read-create,,current,active(1):notInService(2):notReady(3):createAndGo(4):createAndWait(5):destroy(6),Traffic classes are created and delected using this object (using the conventions described in RFC1903).
.1.3.6.1.4.1.838.3.2.1.2.1.28,XEDIA-TRAFFIC-MGMT-MIB::xtmClassMaxRate,Integer32,read-create,,current,,The maximum bandwidth the class may achieve, including bandwidth allocated to this class, and any bandwidth that may be borrowed. A value of zero (0) indicates that this feature is not being used. The xtmClassMaxRate must be set  to a value higher than the xtmClassRate, but may also exceed the parent class's xtmClassRate.
.1.3.6.1.4.1.838.3.2.1.2.1.44,XEDIA-TRAFFIC-MGMT-MIB::xtmClassPeerClassificationOrder,Integer32,read-create,,current,,A positive integer representing the classification order  of peers within the classification hierarchy. For example, when creating three children under the 'root' class the packet classifier checks incoming packets againts classification parameters from left to right in the order in which the children were created. Each peer (aka 'sibling') is assigned an xtmClass- PeerClassificationOrder of 100 by default, as shown below. +_______+ | root | | class | +_______+ / | \ / | \ / | \ / | \ / | \ / | \ +_______+ +_______+ +_______+ | A | | B | | C | | class | | class | | class | | 100 | | 100 | | 100 | (peer classification order) +_______+ +_______+ +_______+ In the figure above, classification order proceeds from A to B to C. In order to alter this order, this object may be modified. For example, to change the order to C, B A one might assign an xtmClassPeerClassificationOrder of 50 to class C, and an xtmClassPeerClassificationOrder of 150 to class A, resulting in the ordered tree shown below. +_______+ | root | | class | +_______+ / | \ / | \ / | \ / | \ / | \ / | \ +_______+ +_______+ +_______+ | C | | B | | A | | class | | class | | class | | 50 | | 100 | | 150 | (peer classification order) +_______+ +_______+ +_______+ 
.1.3.6.1.4.1.838.3.2.1.2.1.45,XEDIA-TRAFFIC-MGMT-MIB::xtmClassSrcIpAddresses,OCTET,read-create,,current,,The range of IP source addresses that match this class.  An all zeros value means 'any source address'.
.1.3.6.1.4.1.838.3.2.1.2.1.46,XEDIA-TRAFFIC-MGMT-MIB::xtmClassDestIpAddresses,OCTET,read-create,,current,,The range of IP destination addresses that match this class.  An all zeros value means 'any destination address'.
.1.3.6.1.4.1.838.3.2.1.2.1.47,XEDIA-TRAFFIC-MGMT-MIB::xtmClassProtocols,OCTET,read-create,,current,,The range of IP protocols that match this class. The value '0'  'any protocol'. Numeric strings, character strings, and combinations of the two may be used. Valid strings include: Numeric String Character String ______________ ________________ 1 icmp 6 tcp 17 udp 89 ospf 
.1.3.6.1.4.1.838.3.2.1.2.1.48,XEDIA-TRAFFIC-MGMT-MIB::xtmClassSrcPorts,OCTET,read-create,,current,,The range of UDP or TCP source ports that match this class.  The value '0' 'any port'. Numeric strings, character strings, and combinations of the two may be used. Valid strings include, but are not limited to the following: Numeric String Character String ______________ ________________ 20 ftpdata 21 ftp 23 telnet 25 smtp 53 domain 67 bootps 68 bootpc 69 tftp 70 gopher 79 finger 80 http 119 nntp 123 ntp 161 snmp 162 snmptrap 179 bgp 
.1.3.6.1.4.1.838.3.2.1.2.1.49,XEDIA-TRAFFIC-MGMT-MIB::xtmClassDestPorts,OCTET,read-create,,current,,The range of UDP or TCP destination ports that match this class.  The value '0' 'any port'. Numeric strings, character strings, and combinations of the two may be used. Valid strings include, but are not limited to the following: Numeric String Character String ______________ ________________ 20 ftp_data 21 ftp 23 telnet 25 smtp 53 domain 67 bootps 68 bootpc 69 tftp 70 gopher 79 finger 80 http 119 nntp 123 ntp 161 snmp 162 snmptrap 179 bgp 
.1.3.6.1.4.1.838.3.2.1.2.1.50,XEDIA-TRAFFIC-MGMT-MIB::xtmClassApplications,OCTET,read-create,,current,,The application level protocol of the class. Application classification allows you to classify based on the application level protocol. Each application has a corresponding 'Established' enumeration which specifies that communication can  not be initiated through this class. For example, 'telnetEstablished' specifies that telnet connections can not pass through this class. 'Established' enumerations provide stateful firewall capabily. For example, in the following configuration, telnet configurations can only be initiated from Host B. Host A can not initiate a telnet connection. +__________________________________+ | | Host A _____| telnet class telnetEstablished|_____ Host B | on cbq.1 class on cbq.2 | +__________________________________+ Numeric strings, character strings, and combinations of the two may be used. Valid strings include the following: Numeric String Character String ______________ ________________ 1 allTcp 2 allTcpEstablished 3 allUdp 4 allUdpEstablished 5 ftp 6 ftpEstablished 7 telnet 8 telnetEstablished 9 http 10 httpEstablished 11 dns 12 dnsEstablished 13 tftp 14 tftpEstablished 15 snmp 16 snmpEstablished 17 httpSSL 18 httpSSLEstablished 19 smtp 20 smtpEstablished 21 bgp 22 bgpEstablished 23 slaProbe 24 slaProbeEstablished 
.1.3.6.1.4.1.838.3.2.1.2.1.51,XEDIA-TRAFFIC-MGMT-MIB::xtmClassClassificationTos,OCTET,read-create,,current,,The range of IPv4 Tos Octet values that match this class.
.1.3.6.1.4.1.838.3.2.1.2.1.52,XEDIA-TRAFFIC-MGMT-MIB::xtmClassSrcDomainNames,OCTET,read-create,,current,,A list of domain names which are to be dynamically included in the range of source IP addresses.
.1.3.6.1.4.1.838.3.2.1.2.1.53,XEDIA-TRAFFIC-MGMT-MIB::xtmClassDestDomainNames,OCTET,read-create,,current,,A list of domain names which are to be dynamically included in the range of destination IP addresses.
.1.3.6.1.4.1.838.3.2.1.2.1.54,XEDIA-TRAFFIC-MGMT-MIB::xtmClassOperator,INTEGER,read-create,,current,and(1):or(2),An operator applied to all classification parameters of this class. A value of 'and' indicates that packets must match all  classification parameters specified by the class in order to be classified within the class. A value of 'or' indicates that packets must match any one of the configured classification parameters specified by the class in order to be classified  within the class. For example, consider a class with classification parameters  xtmClassSrcIpAddresses of '198.202.232.10' and xtmClassProtocol  of 'udp'. When xtmClassOperator is 'and', packets with IP source addresses of 198.202.232.10 and IP protocol of udp are classified within this class. Whe xtmClassOperator is 'or', packets with IP source addresses of 198.202.232.10 or IP protocol or udp are classified within this class.
.1.3.6.1.4.1.838.3.2.2,XEDIA-TRAFFIC-MGMT-MIB::xtmNotifications,,,,,,
.1.3.6.1.4.1.838.3.2.3,XEDIA-TRAFFIC-MGMT-MIB::xtmConformance,,,,,,
.1.3.6.1.4.1.838.4,XEDIA-REG::xediaClasses,,,,,,A registration point under which all Xedia CLASS definition modules are defined.
.1.3.6.1.4.1.838.5,XEDIA-REG::xediaProducts,,,,,,A registration point under which all Xedia AGENT-CAPABILITIES definitions (and therefore values of sysObjectId) are defined.
.1.3.6.1.5,SNMPv2-SMI::security,,,,,,
.1.3.6.1.6,SNMPv2-SMI::snmpV2,,,,,,
.1.3.6.1.6.1,SNMPv2-SMI::snmpDomains,,,,,,
.1.3.6.1.6.2,SNMPv2-SMI::snmpProxys,,,,,,
.1.3.6.1.6.3,SNMPv2-SMI::snmpModules,,,,,,
